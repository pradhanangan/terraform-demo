name: .NET

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NETCORE_VERSION: '3.1.x'
  PROJECTNAME: 'terraform-demo'
  ENVIRONMENT: 'sandpit'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish --output "./src/TerraformDemo.WebAPI/bin/Release/netcoreapp3.1/publish" --configuration "Release" --framework "netcoreapp3.1" /p:GenerateRuntimeConfigurationFiles=true --runtime linux-x64 --self-contained false
    - name: Create directory `dist`
      run: mkdir -p ./dist
    - name: zip-files
      uses: papeloto/action-zip@v1
      with:
        files: ./src/TerraformDemo.WebAPI/bin/Release/netcoreapp3.1/publish/
        dest: ./dist/${{ env.PROJECTNAME }}-${{env.ENVIRONMENT }}-${{github.run_number}}.zip
    - name: Copy `serverless.template` file to `dist` folder
      run: cp "./src/TerraformDemo.WebAPI/serverless.template" "./dist/serverless-${{github.run_number}}.template"
    
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY }}
        aws-region: ap-southeast-2

    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 cp ./dist/${{ env.PROJECTNAME }}-${{env.ENVIRONMENT }}-${{github.run_number}}.zip s3://int-x-std-terraform-demo
        aws s3 cp ./dist/serverless-${{github.run_number}}.template s3://int-x-std-terraform-demo

    - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: int-x-std-terraform-demo-stack
          template: "./dist/serverless-${{github.run_number}}.template"
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "BucketName=int-x-std-terraform-demo,CodeKey=${{env.PROJECTNAME}}-${{env.ENVIRONMENT }}-${{github.run_number}}.zip"
    
    - name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ./dist/
    
    
    
